<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Procedurally generate level 1

    if global.music { 
    
        audio_play_sound(snd_Music1,8,true) 
        sound_volume(snd_Music1, 0.5)    
        
        
    }
    
    
      // create random mountain ranges across the level so we have some variety
    repeat(8)
    {
           
    
        with( instance_create(random_range(256,room_width-128),random_range(256,room_height-512),obj_Island3) ){
            while(!place_free(x,y))
            {
              
                image_index=random(7) // select a random mountain from 8
                x=random_range(256,room_width-256)
                y=random_range(16,room_height-512)
            }
            image_xscale = choose(1,-1)
            image_index=random(5) // select a random mountain from 8
           image_speed=0
             depth = 10000 - 1.1*y // stops things overlapping
        }
    
    }
    
    
    // create random oases across the level so we have some variety
    repeat(5)
    {
    
    
        with( instance_create(random_range(16,room_width-16),random_range(16,0.8*room_height) ,choose(obj_Island2) )){
            while(!place_free(x,y))
            {
                x=random_range(16,room_width-16)
                y=random_range(16,0.8*room_height)
            }
        scaler = random_range(0.6,1.5)
        image_xscale = scaler
        image_yscale = scaler
       
        }
        
    }   

        // create random palm trees across the level so we have some variety
    repeat(100)
    {

            with( tile_add(bck_palm,0,0,16,16,random_range(16,room_width-16),random_range(16,room_height-64),10000) ){

            image_xscale = choose(1,-1)
        }
    
    }
    
    // create random desserts across the level for collection
    global.i=0
    for (global.i=0; global.i&lt;global.cakes; global.i+=1)
    {
        with( instance_create(random_range(16,room_width-16),(((global.i+1)/(global.cakes+1))*room_height)-(1/10)*room_height,obj_Cake1 )){
            while(!place_free(x,y))
            {
                x=random_range(16,room_width-16)
                y=(((global.i+1)/(global.cakes+1))*room_height)-(1/10)*room_height
            }
            image_xscale = choose(1,-1)
          }
     
    }





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
